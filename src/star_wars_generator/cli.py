#!/usr/bin/env python3
"""Star Wars Crawl Generator CLI
–ö–æ–º–∞–Ω–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤–∏–¥–µ–æ –≤ —Å—Ç–∏–ª–µ Star Wars.
"""

import argparse
import json
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
project_root = Path(__file__).parent.parent.parent
sys.path.insert(0, str(project_root / "src"))

try:
    from star_wars_generator import Fixed3DStarWarsGeneratorV2
except ImportError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    print("üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: pip install -r requirements.txt")
    sys.exit(1)


class StarWarsCLI:
    """–ö–æ–º–∞–Ω–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ Star Wars Generator."""

    # Constants
    MIN_THEME_NAME_PARTS = 3

    def __init__(self) -> None:
        """Initialize the Star Wars CLI with default settings."""
        self.generator = Fixed3DStarWarsGeneratorV2()
        self.examples_dir = project_root / "examples"
        self.configs_dir = self.examples_dir / "configs"
        self.default_output_dir = project_root / "output"

        # –°–æ–∑–¥–∞–µ–º –≤—ã—Ö–æ–¥–Ω—É—é –ø–∞–ø–∫—É –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
        self.default_output_dir.mkdir(exist_ok=True)

    def resolve_output_path(self, output: str | None, default_filename: str) -> Path:
        """–†–∞–∑—Ä–µ—à–∞–µ—Ç –ø—É—Ç—å –≤—ã–≤–æ–¥–∞ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –ø–∞–ø–æ–∫."""
        if not output:
            # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ output/
            return self.default_output_dir / default_filename

        output_path = Path(output)

        # –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω–∞ —Ç–æ–ª—å–∫–æ –ø–∞–ø–∫–∞ (–∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –Ω–∞ /)
        if output.endswith(("/", "\\")) or (
            output_path.exists() and output_path.is_dir()
        ):
            output_path = output_path / default_filename

        # –ï—Å–ª–∏ –ø—É—Ç—å –Ω–µ –∏–º–µ–µ—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è, —Å—á–∏—Ç–∞–µ–º –µ–≥–æ –ø–∞–ø–∫–æ–π
        elif not output_path.suffix:
            output_path.mkdir(parents=True, exist_ok=True)
            output_path = output_path / default_filename

        # –°–æ–∑–¥–∞–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é –ø–∞–ø–∫—É –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
        output_path.parent.mkdir(parents=True, exist_ok=True)

        return output_path

    def list_themes(self) -> None:
        """–ü–æ–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–µ–º—ã."""
        print("üé® –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–µ–º—ã:")

        if not self.configs_dir.exists():
            print("‚ùå –ü–∞–ø–∫–∞ —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return

        themes = {}
        for config_file in self.configs_dir.glob("*.json"):
            name_parts = config_file.stem.split("_")
            if len(name_parts) >= self.MIN_THEME_NAME_PARTS:
                theme = "_".join(name_parts[:-1])
                size = name_parts[-1]

                if theme not in themes:
                    themes[theme] = []
                themes[theme].append(size)

        for theme, sizes in themes.items():
            print(f"  üìÅ {theme}")
            for size in sorted(sizes):
                print(f"    ‚îú‚îÄ {size}")

        print(f"\nüí° –í—Å–µ–≥–æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π: {len(list(self.configs_dir.glob('*.json')))}")

    def create_video_from_config(
        self,
        config_path: str,
        output: str | None = None,
        tilt_angle: float | None = None,
        perspective_min: float | None = None,
        perspective_max: float | None = None,
    ) -> bool:
        """–°–æ–∑–¥–∞—Ç—å –≤–∏–¥–µ–æ –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏."""
        config_file = Path(config_path)

        if not config_file.exists():
            # –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –≤ examples/configs/
            config_file = self.configs_dir / config_path
            if not config_file.exists():
                config_file = self.configs_dir / f"{config_path}.json"

        if not config_file.exists():
            print(f"‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {config_path}")
            print("üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ --list –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–µ–º")
            return False

        try:
            print(f"üìã –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é: {config_file.name}")
            self.generator.load_config_file(str(config_file))

            # –ü—Ä–∏–º–µ–Ω—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã –µ—Å–ª–∏ –æ–Ω–∏ –∑–∞–¥–∞–Ω—ã
            if (
                tilt_angle is not None
                or perspective_min is not None
                or perspective_max is not None
            ):
                print("üéØ –ü—Ä–∏–º–µ–Ω—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã:")
                if tilt_angle is not None:
                    self.generator.tilt_angle = tilt_angle
                    print(f"   –£–≥–æ–ª –Ω–∞–∫–ª–æ–Ω–∞: {tilt_angle}¬∞")
                if perspective_min is not None:
                    self.generator.base_perspective = perspective_min
                    print(f"   –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–∞: {perspective_min}")
                if perspective_max is not None:
                    self.generator.max_perspective = perspective_max
                    print(f"   –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–∞: {perspective_max}")

            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø—É—Ç–∏ –≤—ã–≤–æ–¥–∞
            default_filename = f"starwars_{config_file.stem}.mp4"
            output_path = self.resolve_output_path(output, default_filename)

            print(f"üé¨ –°–æ–∑–¥–∞–µ–º –≤–∏–¥–µ–æ: {output_path}")
            self.generator.generate_video(str(output_path))

            if output_path.exists():
                print(f"‚úÖ –í–∏–¥–µ–æ —Å–æ–∑–¥–∞–Ω–æ: {output_path}")
                return True
            print("‚ùå –í–∏–¥–µ–æ –Ω–µ –±—ã–ª–æ —Å–æ–∑–¥–∞–Ω–æ")
            return False

        except (FileNotFoundError, json.JSONDecodeError, RuntimeError) as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –≤–∏–¥–µ–æ: {e}")
            return False

    def create_video_from_text(
        self,
        title: str,
        text: str,
        output: str | None = None,
        tilt_angle: float | None = None,
        perspective_min: float | None = None,
        perspective_max: float | None = None,
    ) -> bool:
        """–°–æ–∑–¥–∞—Ç—å –≤–∏–¥–µ–æ –∏–∑ —Ç–µ–∫—Å—Ç–∞."""
        # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É —Å–∏–º–≤–æ–ª–æ–≤ –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏
        title = title.replace("\\n", "\n")
        text = text.replace("\\n", "\n")

        config = {
            "title": {"text": title, "color": "#FFE81F", "font_size": 72},
            "main_text": {"text": text, "color": "#FFE81F", "font_size": 48},
            "animation": {"duration": 30},
        }

        # –î–æ–±–∞–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã –µ—Å–ª–∏ –æ–Ω–∏ –∑–∞–¥–∞–Ω—ã
        if (
            tilt_angle is not None
            or perspective_min is not None
            or perspective_max is not None
        ):
            config["perspective"] = {}
            if tilt_angle is not None:
                config["perspective"]["tilt_angle"] = tilt_angle
            if perspective_min is not None:
                config["perspective"]["base_perspective"] = perspective_min
            if perspective_max is not None:
                config["perspective"]["max_perspective"] = perspective_max

        try:
            print(f"üìù –°–æ–∑–¥–∞–µ–º –≤–∏–¥–µ–æ —Å –∑–∞–≥–æ–ª–æ–≤–∫–æ–º: {title}")
            self.generator.load_config_dict(config)

            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø—É—Ç–∏ –≤—ã–≤–æ–¥–∞
            default_filename = "custom_starwars.mp4"
            output_path = self.resolve_output_path(output, default_filename)

            print(f"üé¨ –°–æ–∑–¥–∞–µ–º –≤–∏–¥–µ–æ: {output_path}")
            self.generator.generate_video(str(output_path))

            if output_path.exists():
                print(f"‚úÖ –í–∏–¥–µ–æ —Å–æ–∑–¥–∞–Ω–æ: {output_path}")
                return True
            print("‚ùå –í–∏–¥–µ–æ –Ω–µ –±—ã–ª–æ —Å–æ–∑–¥–∞–Ω–æ")
            return False

        except (FileNotFoundError, json.JSONDecodeError, RuntimeError) as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –≤–∏–¥–µ–æ: {e}")
            return False

    def create_config_template(self, filename: str) -> bool:
        """–°–æ–∑–¥–∞—Ç—å —à–∞–±–ª–æ–Ω –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏."""
        template = {
            "intro_text": {
                "text": "A long time ago in a galaxy far, far away....",
                "color": "#4A90E2",
                "font_size": 36,
            },
            "title": {
                "text": "Episode IV\\nA NEW HOPE",
                "color": "#FFE81F",
                "font_size": 72,
            },
            "main_text": {
                "text": "It is a period of civil war.\\nRebel spaceships, striking\\nfrom a hidden base, have won\\ntheir first victory against\\nthe evil Galactic Empire.",
                "color": "#FFE81F",
                "font_size": 48,
            },
            "animation": {"duration": 45},
            "video_settings": {
                "width": 1280,
                "height": 720,
                "fps": 24,
                "output_filename": "starwars_crawl.mp4",
            },
            "background": {"color": "#000000"},
        }

        try:
            with open(filename, "w", encoding="utf-8") as f:
                json.dump(template, f, indent=2, ensure_ascii=False)
            print(f"‚úÖ –®–∞–±–ª–æ–Ω —Å–æ–∑–¥–∞–Ω: {filename}")
            print(f"üí° –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª –∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: starwars-cli {filename}")
            return True
        except (FileNotFoundError, PermissionError, OSError) as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —à–∞–±–ª–æ–Ω–∞: {e}")
            return False

    def batch_process(self) -> bool:
        """–ü–∞–∫–µ—Ç–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π."""
        if not self.configs_dir.exists():
            print("‚ùå –ü–∞–ø–∫–∞ —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return False

        configs = list(self.configs_dir.glob("*.json"))
        if not configs:
            print("‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            return False

        output_dir = self.examples_dir / "videos"
        output_dir.mkdir(exist_ok=True)

        print(f"üöÄ –ù–∞—á–∏–Ω–∞–µ–º –ø–∞–∫–µ—Ç–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É {len(configs)} –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π...")

        success_count = 0
        for config_file in configs:
            try:
                print(f"\nüìã –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º: {config_file.name}")
                self.generator.load_config_file(str(config_file))

                output_path = output_dir / f"{config_file.stem}.mp4"
                self.generator.generate_video(str(output_path))

                if output_path.exists():
                    print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ: {output_path.name}")
                    success_count += 1
                else:
                    print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å: {config_file.name}")

            except (FileNotFoundError, json.JSONDecodeError, RuntimeError) as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ {config_file.name}: {e}")

        print(f"\nüéâ –ó–∞–≤–µ—Ä—à–µ–Ω–æ! –£—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ: {success_count}/{len(configs)} –≤–∏–¥–µ–æ")
        print(f"üìÅ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ –ø–∞–ø–∫–µ: {output_dir}")
        return success_count > 0


def main() -> int:
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è CLI."""
    parser = argparse.ArgumentParser(
        description="üé¨ Star Wars Crawl Generator - —Å–æ–∑–¥–∞–Ω–∏–µ –≤–∏–¥–µ–æ –≤ —Å—Ç–∏–ª–µ Star Wars",
        formatter_class=argparse.RawDescriptionHelpFormatter,
        epilog="""
–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:

  # –ü—Ä–æ—Å—Ç–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –≤–∏–¥–µ–æ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  starwars-cli

  # –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–æ–π —Ç–µ–º—ã
  starwars-cli classic_yellow_normal
  starwars-cli blue_theme_large

  # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É–≥–ª–∞ –Ω–∞–∫–ª–æ–Ω–∞
  starwars-cli classic_yellow_normal --tilt 22 --perspective-min 0.45 --perspective-max 0.7
  starwars-cli --title "–ú–û–ô –≠–ü–ò–ó–û–î" --text "–ú–æ—è –∏—Å—Ç–æ—Ä–∏—è..." --tilt 15

  # –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏–¥–µ–æ –∏–∑ —Ñ–∞–π–ª–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
  starwars-cli my_config.json -o my_video.mp4

  # –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏–¥–µ–æ –∏–∑ —Ç–µ–∫—Å—Ç–∞
  starwars-cli --title "–ú–û–ô –≠–ü–ò–ó–û–î" --text "–ò—Å—Ç–æ—Ä–∏—è –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è..." -o custom.mp4

  # –ü—Ä–æ—Å–º–æ—Ç—Ä –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–µ–º
  starwars-cli --list

  # –°–æ–∑–¥–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
  starwars-cli --template my_template.json

  # –ü–∞–∫–µ—Ç–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö —Ç–µ–º
  starwars-cli --batch

–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã:
  --tilt 10          # –°–ª–∞–±—ã–π –Ω–∞–∫–ª–æ–Ω (–º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–∞)
  --tilt 18          # –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –Ω–∞–∫–ª–æ–Ω (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
  --tilt 22          # –û–ø—Ç–∏–º–∞–ª—å–Ω—ã–π –Ω–∞–∫–ª–æ–Ω (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)
  --tilt 25          # –°–∏–ª—å–Ω—ã–π –Ω–∞–∫–ª–æ–Ω (–¥—Ä–∞–º–∞—Ç–∏—á–µ—Å–∫–∏–π —ç—Ñ—Ñ–µ–∫—Ç)

May the Force be with you! ‚öîÔ∏è‚ú®
        """,
    )

    # –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
    parser.add_argument(
        "config",
        nargs="?",
        help="–ò–º—è —Ç–µ–º—ã –∏–ª–∏ –ø—É—Ç—å –∫ JSON –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä: classic_yellow_normal, my_config.json)",
    )

    parser.add_argument(
        "-o",
        "--output",
        help="–ü—É—Ç—å –∫ –≤—ã—Ö–æ–¥–Ω–æ–º—É —Ñ–∞–π–ª—É –∏–ª–∏ –ø–∞–ø–∫–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä: video.mp4, ./videos/, ./my_folder/video.mp4). –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é: output/",
    )

    # –°–æ–∑–¥–∞–Ω–∏–µ –∏–∑ —Ç–µ–∫—Å—Ç–∞
    parser.add_argument("--title", help="–ó–∞–≥–æ–ª–æ–≤–æ–∫ –¥–ª—è –≤–∏–¥–µ–æ (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å --text)")

    parser.add_argument(
        "--text", help="–û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç –¥–ª—è –≤–∏–¥–µ–æ (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å --title)"
    )

    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã
    parser.add_argument(
        "--tilt",
        type=float,
        metavar="ANGLE",
        help="–£–≥–æ–ª –Ω–∞–∫–ª–æ–Ω–∞ —Ç–µ–∫—Å—Ç–∞ –≤ –≥—Ä–∞–¥—É—Å–∞—Ö (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è: 10-25). –ü—Ä–∏–º–µ—Ä: --tilt 22",
    )

    parser.add_argument(
        "--perspective-min",
        type=float,
        metavar="VALUE",
        help="–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã (0.0-1.0). –ü—Ä–∏–º–µ—Ä: --perspective-min 0.4",
    )

    parser.add_argument(
        "--perspective-max",
        type=float,
        metavar="VALUE",
        help="–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã (0.0-1.0). –ü—Ä–∏–º–µ—Ä: --perspective-max 0.7",
    )

    # –£—Ç–∏–ª–∏—Ç—ã
    parser.add_argument(
        "--list",
        "-l",
        action="store_true",
        help="–ü–æ–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–µ–º—ã –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏",
    )

    parser.add_argument(
        "--template", "-t", metavar="FILENAME", help="–°–æ–∑–¥–∞—Ç—å —à–∞–±–ª–æ–Ω JSON –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
    )

    parser.add_argument(
        "--batch",
        "-b",
        action="store_true",
        help="–°–æ–∑–¥–∞—Ç—å –≤–∏–¥–µ–æ –¥–ª—è –≤—Å–µ—Ö –≥–æ—Ç–æ–≤—ã—Ö –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π",
    )

    parser.add_argument(
        "--version", "-v", action="version", version="Star Wars Crawl Generator 1.0.0"
    )

    args = parser.parse_args()

    # –°–æ–∑–¥–∞–µ–º CLI –æ–±—ä–µ–∫—Ç
    cli = StarWarsCLI()

    print("üåü Star Wars Crawl Generator CLI")
    print("=" * 40)

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
    if args.list:
        cli.list_themes()
        return 0

    if args.template:
        success = cli.create_config_template(args.template)
        return 0 if success else 1

    if args.batch:
        success = cli.batch_process()
        return 0 if success else 1

    if args.title and args.text:
        success = cli.create_video_from_text(
            args.title,
            args.text,
            args.output,
            args.tilt,
            args.perspective_min,
            args.perspective_max,
        )
        return 0 if success else 1

    if args.title or args.text:
        print("‚ùå –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤–∏–¥–µ–æ –∏–∑ —Ç–µ–∫—Å—Ç–∞ –Ω—É–∂–Ω—ã –æ–±–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞: --title –∏ --text")
        return 1

    if args.config:
        success = cli.create_video_from_config(
            args.config,
            args.output,
            args.tilt,
            args.perspective_min,
            args.perspective_max,
        )
        return 0 if success else 1

    # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é - —Å–æ–∑–¥–∞–µ–º –≤–∏–¥–µ–æ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    print("üé¨ –°–æ–∑–¥–∞–µ–º –≤–∏–¥–µ–æ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é...")
    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø—É—Ç–∏ –≤—ã–≤–æ–¥–∞
        default_filename = "starwars_crawl.mp4"
        output_path = cli.resolve_output_path(args.output, default_filename)

        print(f"üìÅ –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤: {output_path}")
        cli.generator.generate_video(str(output_path))

        if output_path.exists():
            print(f"‚úÖ –í–∏–¥–µ–æ —Å–æ–∑–¥–∞–Ω–æ: {output_path}")
            return 0
        print("‚ùå –í–∏–¥–µ–æ –Ω–µ –±—ã–ª–æ —Å–æ–∑–¥–∞–Ω–æ")
        return 1
    except (
        FileNotFoundError,
        json.JSONDecodeError,
        RuntimeError,
        KeyboardInterrupt,
    ) as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –≤–∏–¥–µ–æ: {e}")
        return 1


if __name__ == "__main__":
    sys.exit(main())
