#!/usr/bin/env python3
"""–°–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ —á–µ–∫-–ª–∏—Å—Ç–∞ –¥–ª—è Python –ø—Ä–æ–µ–∫—Ç–∞."""

import subprocess
import sys
from pathlib import Path


def run_command(cmd: str, description: str) -> bool:
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è."""
    print(f"üîÑ {description}...")
    try:
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–¥–∏—Ä–æ–≤–∫—É UTF-8 –¥–ª—è Windows
        result = subprocess.run(
            cmd,
            shell=True,
            capture_output=True,
            text=True,
            encoding="utf-8",
            errors="replace", check=False,
        )
        if result.returncode == 0:
            print(f"‚úÖ {description} - —É—Å–ø–µ—à–Ω–æ")
            return True
        print(f"‚ùå {description} - –æ—à–∏–±–∫–∞:")
        print(result.stderr)
        return False
    except Exception as e:
        print(f"‚ùå {description} - –∏—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
        return False


def daily_checklist():
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π —á–µ–∫-–ª–∏—Å—Ç."""
    print("üöÄ –ï–ñ–ï–î–ù–ï–í–ù–´–ô –ß–ï–ö-–õ–ò–°–¢ PYTHON –ü–†–û–ï–ö–¢–ê")
    print("=" * 50)

    # 1. –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞
    success = run_command("ruff format .", "–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞ (ruff format)")

    # 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—à–∏–±–æ–∫
    success &= run_command("ruff check . --fix", "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫")

    # 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π (UV –Ω–µ –∏–º–µ–µ—Ç autoremove, –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥—Ä—É–≥—É—é –∫–æ–º–∞–Ω–¥—É)
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
    run_command("uv pip list", "–ü—Ä–æ—Å–º–æ—Ç—Ä —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤")

    # 4. –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ (–µ—Å–ª–∏ –µ—Å—Ç—å)
    if Path("tests").exists():
        success &= run_command("pytest tests/ -v", "–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤")

    print("\n" + "=" * 50)
    if success:
        print("‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã, —Ç—Ä–µ–±—É—é—â–∏–µ –≤–Ω–∏–º–∞–Ω–∏—è")

    return success


def weekly_checklist() -> None:
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π —á–µ–∫-–ª–∏—Å—Ç."""
    print("üóìÔ∏è –ï–ñ–ï–ù–ï–î–ï–õ–¨–ù–´–ô –ß–ï–ö-–õ–ò–°–¢")
    print("=" * 50)

    # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
    run_command("uv pip list --outdated", "–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö –ø–∞–∫–µ—Ç–æ–≤")

    # 2. –ü–æ–∏—Å–∫ –º–µ—Ä—Ç–≤–æ–≥–æ –∫–æ–¥–∞
    run_command("ruff check --select F401,F841 src/", "–ü–æ–∏—Å–∫ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º–æ–≥–æ –∫–æ–¥–∞")

    print("‚úÖ –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã")


def monthly_checklist() -> None:
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –µ–∂–µ–º–µ—Å—è—á–Ω—ã–π —á–µ–∫-–ª–∏—Å—Ç."""
    print("üìÖ –ï–ñ–ï–ú–ï–°–Ø–ß–ù–´–ô –ß–ï–ö-–õ–ò–°–¢")
    print("=" * 50)

    # 1. –ü–æ–ª–Ω—ã–π –∞—É–¥–∏—Ç –∫–æ–¥–∞
    run_command("ruff check src/", "–ü–æ–ª–Ω—ã–π –∞—É–¥–∏—Ç –∫–æ–¥–∞")

    # 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
    run_command("uv pip list", "–ü—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π")

    # 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã
    arch_file = Path("ARCHITECTURE.md")
    if arch_file.exists():
        print(f"üìñ –§–∞–π–ª –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {arch_file}")
        print("‚ö†Ô∏è –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ–±–Ω–æ–≤–∏—Ç—å ARCHITECTURE.md –≤—Ä—É—á–Ω—É—é")
    else:
        print("‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ñ–∞–π–ª ARCHITECTURE.md")

    print("‚úÖ –ï–∂–µ–º–µ—Å—è—á–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã")


def pre_commit_checklist():
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–µ—Ä–µ–¥ –∫–æ–º–º–∏—Ç–æ–º."""
    print("üìù –ß–ï–ö-–õ–ò–°–¢ –ü–ï–†–ï–î –ö–û–ú–ú–ò–¢–û–ú")
    print("=" * 50)

    success = True

    # 1. –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    success &= run_command("ruff format .", "–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞")

    # 2. –õ–∏–Ω—Ç–µ—Ä
    success &= run_command("ruff check .", "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏–Ω—Ç–µ—Ä–∞")

    # 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
    run_command("uv pip list", "–ü—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π")

    # 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ñ–∞–π–ª–æ–≤
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞...")

    required_files = ["src/", "tests/", "pyproject.toml", "ARCHITECTURE.md"]
    for file_path in required_files:
        if Path(file_path).exists():
            print(f"   ‚úÖ {file_path}")
        else:
            print(f"   ‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç: {file_path}")
            success = False

    print("\n" + "=" * 50)
    if success:
        print("‚úÖ –ì–æ—Ç–æ–≤ –∫ –∫–æ–º–º–∏—Ç—É!")
    else:
        print("‚ö†Ô∏è –ò—Å–ø—Ä–∞–≤—å—Ç–µ –ø—Ä–æ–±–ª–µ–º—ã –ø–µ—Ä–µ–¥ –∫–æ–º–º–∏—Ç–æ–º")

    return success


def main() -> None:
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è."""
    if len(sys.argv) < 2:
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
        print("  python checklist.py daily     - –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏")
        print("  python checklist.py weekly    - –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏")
        print("  python checklist.py monthly   - –µ–∂–µ–º–µ—Å—è—á–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏")
        print("  python checklist.py pre-commit - –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–µ—Ä–µ–¥ –∫–æ–º–º–∏—Ç–æ–º")
        sys.exit(1)

    command = sys.argv[1].lower()

    if command == "daily":
        success = daily_checklist()
    elif command == "weekly":
        weekly_checklist()
        success = True
    elif command == "monthly":
        monthly_checklist()
        success = True
    elif command == "pre-commit":
        success = pre_commit_checklist()
    else:
        print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: {command}")
        sys.exit(1)

    sys.exit(0 if success else 1)


if __name__ == "__main__":
    main()
